<!-- HTML file generated by: cpp2html version 4.42 -->
<!-- Copyright (c) 2001-2016 DataReel Software Development -->
<!-- For program info contact: https://github.com/datareel -->
<HTML>
<HEAD>
<TITLE> WinsockMessageExample </TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<FONT FACE="Courier New" SIZE=3><PRE>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// -------- Start of File -------- //</FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">// C++ Source Code File Name: client.cpp</FONT>
<FONT COLOR="#ff0000">// C++ Compiler Used: MSVC, BCC32, GCC, HPUX aCC, SOLARIS CC</FONT>
<FONT COLOR="#ff0000">// Produced By: DataReel Software Development Team</FONT>
<FONT COLOR="#ff0000">// File Creation Date: 09/20/1999</FONT>
<FONT COLOR="#ff0000">// Date Last Modified: 06/17/2016</FONT>
<FONT COLOR="#ff0000">// Copyright (c) 2001-2016 DataReel Software Development</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">// ------------- Program Description and Details ------------- // </FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">/*
This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
 
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  
USA

Demo of the gxSocket WinSock functions. This test program is used
to initialize and release various winsock versions and display the
contents of the WSAData structure:

struct WSAData {  
    WORD            wVersion; 
    WORD            wHighVersion; 
    char            szDescription[WSADESCRIPTION_LEN+1]; 
    char            szSystemStatus[WSASYSSTATUS_LEN+1]; 
    unsigned short  iMaxSockets; 
    unsigned short  iMaxUdpDg; 
    char FAR *      lpVendorInfo; // Vendor-specific data structure
}; 

The gxSocket class can be use to automatically or manually
initialize the winsock DLL prior to the use of the Windows 
networking subsystem. Automatic winsock initialization will 
default to winsock version set in the gxSocket constructor.
*/</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
#include "gxdlcode.h"

#if defined (__USE_ANSI_CPP__) <FONT COLOR="#ff0000">// Use the ANSI Standard C++ library</FONT>
#include &lt;iostream&gt;
using namespace std; <FONT COLOR="#ff0000">// Use unqualified names for Standard C++ library</FONT>
#else <FONT COLOR="#ff0000">// Use the old iostream library by default</FONT>
#include &lt;iostream.h&gt;
#endif <FONT COLOR="#ff0000">// __USE_ANSI_CPP__</FONT>

#include "gxsocket.h"
#include "wserror.h"

void PausePrg()
{
  cout &lt;&lt; "\n";
  cout &lt;&lt; "Press Enter to continue..." &lt;&lt; "\n";
  cin.get();
}

void PrintWSAInfo(gxSocket *s)
{
  cout &lt;&lt; "WinSock Version Requested: " 
       &lt;&lt; (int)LOBYTE(s-&gt;socket_data.wVersion) 
       &lt;&lt; "." &lt;&lt; (int)HIBYTE(s-&gt;socket_data.wVersion) &lt;&lt; "\n";
  cout &lt;&lt; "Current WinSock Version: " 
       &lt;&lt; (int)LOBYTE(s-&gt;socket_data.wHighVersion)
       &lt;&lt; "." &lt;&lt; (int)HIBYTE(s-&gt;socket_data.wHighVersion) &lt;&lt; "\n";
  cout &lt;&lt; "Description: " &lt;&lt; s-&gt;socket_data.szDescription &lt;&lt; "\n";
  cout &lt;&lt; "System Status: " &lt;&lt; s-&gt;socket_data.szSystemStatus &lt;&lt; "\n";
  cout &lt;&lt; "Max number of sockets: " &lt;&lt; s-&gt;socket_data.iMaxSockets 
       &lt;&lt; "\n";
  cout &lt;&lt; "MAX UDP datagram size: " &lt;&lt; s-&gt;socket_data.iMaxUdpDg
       &lt;&lt; "\n";
}

void TestWSAVersion(gxSocket *s, gxsSocketLibraryVersion ver)
{
  s-&gt;socket_version = ver;
  if(s-&gt;InitSocketLibrary() == 0) {
    PrintWSAInfo(s);
    cout &lt;&lt; "\n";
    cout &lt;&lt; "Simulating a WinSock error and printing the extended error info"
	 &lt;&lt; "\n";
    WinSockSetException(WSAEINTR);
    cout &lt;&lt; WinSockExceptionMessage() &lt;&lt; "\n";
    if(s-&gt;ReleaseSocketLibrary() != 0) {
      cout &lt;&lt; s-&gt;SocketExceptionMessage() &lt;&lt; "\n"; 
    }   
  }
  else {
    cout &lt;&lt; s-&gt;SocketExceptionMessage() &lt;&lt; "\n"; 
  } 
}

int main()
{
  gxsSocketLibraryVersion wsa_ver10 = gxSOCKET_WSAVER_ONEZERO;
  gxsSocketLibraryVersion wsa_ver11 = gxSOCKET_WSAVER_ONEONE;
  gxsSocketLibraryVersion wsa_ver20 = gxSOCKET_WSAVER_TWOZERO;
  gxsSocketLibraryVersion wsa_ver22 = gxSOCKET_WSAVER_TWOTWO;

  gxSocket s;

  cout &lt;&lt; "Testing winsock version 1.0" &lt;&lt; "\n";
  TestWSAVersion(&amp;s, wsa_ver10);
  PausePrg();

  cout &lt;&lt; "Testing winsock version 1.1" &lt;&lt; "\n";
  TestWSAVersion(&amp;s, wsa_ver11);
  PausePrg();

  cout &lt;&lt; "Testing winsock version 2.0" &lt;&lt; "\n";
  TestWSAVersion(&amp;s, wsa_ver20);
  PausePrg();

  cout &lt;&lt; "Testing winsock version 2.2" &lt;&lt; "\n";
  TestWSAVersion(&amp;s, wsa_ver22);

  cout &lt;&lt; "\n";
  cout &lt;&lt; "Exiting..." &lt;&lt; "\n";
  return 0;
}
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// --------- End of File --------- //</FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>

</PRE></FONT>

</BODY>
</HTML>
