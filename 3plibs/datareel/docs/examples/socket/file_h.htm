<!-- HTML file generated by: cpp2html version 4.42 -->
<!-- Copyright (c) 2001-2016 DataReel Software Development -->
<!-- For program info contact: https://github.com/datareel -->
<HTML>
<HEAD>
<TITLE> CacheFileIncludeExample </TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<FONT FACE="Courier New" SIZE=3><PRE>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// -------- Start of File -------- //</FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">// C++ Header File Name: gxsfile.h</FONT>
<FONT COLOR="#ff0000">// C++ Compiler Used: MSVC, BCC32, GCC, HPUX aCC, SOLARIS CC</FONT>
<FONT COLOR="#ff0000">// Produced By: DataReel Software Development Team</FONT>
<FONT COLOR="#ff0000">// File Creation Date: 09/20/1999</FONT>
<FONT COLOR="#ff0000">// Date Last Modified: 06/17/2016</FONT>
<FONT COLOR="#ff0000">// Copyright (c) 2001-2016 DataReel Software Development</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">// ---------- Include File Description and Details  ---------- // </FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">/*
This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
 
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  
USA

The gxsFile class is used to move data to and from disk
files using the device cache.
*/</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
#ifndef __GXS_FILE_HPP__
#define __GXS_FILE_HPP__

#include "gxdlcode.h"

#include &lt;stdlib.h&gt;
#include "devcache.h"
#include "membuf.h"
#include "memblock.h"
#include "gxstream.h"
#include "gxdatagm.h"
#include "scomserv.h"
#include "dfileb.h"

class gxsFile : public gxDeviceCache
{
public:
  gxsFile(int CacheSize = 1024);
  ~gxsFile() { }

public:
  void DeviceErrorHandler(const char *mesg);
  void Flush(); <FONT COLOR="#ff0000">// Flush the cache buckets to the output device</FONT>
  unsigned BucketsInUse() { return cache.BucketsInUse(); }
  void CloseOutputFile();
  void CloseInputFile();
  int OpenInputFile(const char *in);
  int OpenOutputFile(const char *out);
  FAU_t LoadFile(gxDeviceCachePtr p, FAU_t end_of_file);
  int CopyFileToFile(FAU_t &amp;byte_count);
  int CopyFileToStreamSocket(gxStream *s, FAU_t &amp;byte_count);
  int CopyFileToDatagramSocket(gxDatagram *s, FAU_t &amp;byte_count);
  int CopyFileToSerialPort(gxSerialCommServer *s, FAU_t &amp;byte_count);
  int CopyStreamSocketToFile(gxStream *s, gxBlockHeader &amp;gxs);
  int CopyDatagramSocketToFile(gxDatagram *s, gxBlockHeader &amp;gxs);
  int CopySerialPortToFile(gxSerialCommServer *s, gxBlockHeader &amp;gxs);

private: <FONT COLOR="#ff0000">// Base class interface</FONT>
  void Read(void *buf, unsigned Bytes, gxDeviceTypes dev);
  void Write(const void *buf, unsigned Bytes, gxDeviceTypes dev);

private: <FONT COLOR="#ff0000">// Device objects</FONT>
  DiskFileB outfile;               <FONT COLOR="#ff0000">// File used to output data</FONT>
  DiskFileB infile;                <FONT COLOR="#ff0000">// File used to input data</FONT>
  gxStream *stream_sock;           <FONT COLOR="#ff0000">// Stream socket (network device) </FONT>
  gxDatagram *datagram_sock;       <FONT COLOR="#ff0000">// Datagram socket (network device)</FONT>
  gxSerialCommServer *serial_port; <FONT COLOR="#ff0000">// Serial port (RS232 device)</FONT>

private: <FONT COLOR="#ff0000">// Temporary variables used during read/write operations</FONT>
  gxBlockHeader curr_stream_hdr;
  gxBlockHeader curr_datagram_hdr;
  gxBlockHeader curr_serial_hdr;

private: <FONT COLOR="#ff0000">// Device cache</FONT>
  gxDeviceBucketCache cache;

public: <FONT COLOR="#ff0000">// Functions used to get the current device cache</FONT>
  gxDeviceBucketCache *GetCache() { return &amp;cache; }
};

#endif <FONT COLOR="#ff0000">// __GXS_FILE_HPP__</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- //</FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// --------- End of File --------- //</FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>

</PRE></FONT>

</BODY>
</HTML>
