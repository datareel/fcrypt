<!-- HTML file generated by: cpp2html version 4.42 -->
<!-- Copyright (c) 2001-2016 DataReel Software Development -->
<!-- For program info contact: https://github.com/datareel -->
<HTML>
<HEAD>
<TITLE> BigBlockExample </TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<FONT FACE="Courier New" SIZE=3><PRE>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// -------- Start of File -------- //</FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">// C++ Source Code File Name: testprog.cpp </FONT>
<FONT COLOR="#ff0000">// Compiler Used: MSVC, BCC32, GCC, HPUX aCC, SOLARIS CC</FONT>
<FONT COLOR="#ff0000">// Produced By: DataReel Software Development Team</FONT>
<FONT COLOR="#ff0000">// File Creation Date: 02/04/1997  </FONT>
<FONT COLOR="#ff0000">// Date Last Modified: 06/17/2016</FONT>
<FONT COLOR="#ff0000">// Copyright (c) 2001-2016 DataReel Software Development</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">// ------------- Program Description and Details ------------- // </FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">/*
This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
 
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  
USA

Program used to test the allocation of large database blocks.
*/</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
#include "gxdlcode.h"

#if defined (__USE_ANSI_CPP__) <FONT COLOR="#ff0000">// Use the ANSI Standard C++ library</FONT>
#include &lt;iostream&gt;
using namespace std; <FONT COLOR="#ff0000">// Use unqualified names for Standard C++ library</FONT>
#else <FONT COLOR="#ff0000">// Use the old iostream library by default</FONT>
#include &lt;iostream.h&gt;
#endif <FONT COLOR="#ff0000">// __USE_ANSI_CPP__</FONT>

#include "gxdbase.h"
#include "gxdstats.h"

void PausePrg()
{
  cout &lt;&lt; "\n";
  cout &lt;&lt; "Press enter to continue..." &lt;&lt; "\n";
  cin.get();
}

int main()
{
  gxDatabase *f = new gxDatabase;
  if(!f) {
    cout &lt;&lt; "Error allocating memory for database object" &lt;&lt; "\n";
    return 1;
  }
  const char *fname = "bigblk.gxd";
  f-&gt;Create(fname);
  if(CheckError(f) != 0) {
    delete f;
    return 1;
  }

  __UWORD__ xl_block = 10000000; <FONT COLOR="#ff0000">// 10Meg bytes</FONT>
  __UWORD__ el_block = 1000000;  <FONT COLOR="#ff0000">// 1Meg bytes</FONT>
  __UWORD__ vl_block = 100000;   <FONT COLOR="#ff0000">// 100K bytes</FONT>
  __UWORD__ l_block  = 10000;    <FONT COLOR="#ff0000">// 10K bytes  </FONT>
  
  cout &lt;&lt; "Testing the allocation/removal of large blocks." &lt;&lt; "\n";
  cout &lt;&lt; "WARNING: This test will require 12 Meg of disk space." &lt;&lt; "\n";
  cout &lt;&lt; "Press Enter to continue or Ctrl-C to abort..." &lt;&lt; "\n";
  cin.get();
  
  cout &lt;&lt; "\n";
  cout &lt;&lt; "Allocating " &lt;&lt; xl_block &lt;&lt; " bytes..." &lt;&lt; "\n";
  FAU_t addr = f-&gt;Alloc(xl_block);
  f-&gt;CalcChecksum(xl_block, addr);
  cout &lt;&lt; "Removing the block..." &lt;&lt; "\n";
  f-&gt;Remove(addr);
  PausePrg();

  DatabaseStats(f);
  PausePrg();
  cout &lt;&lt; "Allocating " &lt;&lt; el_block &lt;&lt; " bytes..." &lt;&lt; "\n";
  addr = f-&gt;Alloc(el_block);
  f-&gt;CalcChecksum(el_block, addr);
  cout &lt;&lt; "Removing the block..." &lt;&lt; "\n";
  f-&gt;Remove(addr);
  PausePrg();

  DatabaseStats(f);
  PausePrg();
  cout &lt;&lt; "Allocating " &lt;&lt; vl_block &lt;&lt; " bytes..." &lt;&lt; "\n";
  addr = f-&gt;Alloc(vl_block);
  f-&gt;CalcChecksum(vl_block, addr);
  cout &lt;&lt; "Removing the block..." &lt;&lt; "\n";
  f-&gt;Remove(addr);
  PausePrg();

  DatabaseStats(f);
  PausePrg();
  cout &lt;&lt; "Allocating " &lt;&lt; l_block &lt;&lt; " bytes..." &lt;&lt; "\n";
  addr = f-&gt;Alloc(l_block);
  f-&gt;CalcChecksum(l_block, addr);
  cout &lt;&lt; "Removing the block..." &lt;&lt; "\n";
  f-&gt;Remove(addr);
  PausePrg();

  DatabaseStats(f);
  PausePrg();
  
  cout &lt;&lt; "Exiting..." &lt;&lt; "\n";
  f-&gt;Close();
  if(CheckError(f) != 0) {
    delete f;
    return 1;
  }

  delete f;
  return 0;
}
<FONT COLOR="#ff0000">// ----------------------------------------------------------- //</FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// --------- End of File --------- //</FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>

</PRE></FONT>

</BODY>
</HTML>
