<!-- HTML file generated by: cpp2html version 4.42 -->
<!-- Copyright (c) 2001-2016 DataReel Software Development -->
<!-- For program info contact: https://github.com/datareel -->
<HTML>
<HEAD>
<TITLE> ReopenExample </TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<FONT FACE="Courier New" SIZE=3><PRE>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// -------- Start of File -------- //</FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">// C++ Source Code File Name: testprog.cpp</FONT>
<FONT COLOR="#ff0000">// Compiler Used: MSVC, BCC32, GCC, HPUX aCC, SOLARIS CC</FONT>
<FONT COLOR="#ff0000">// Produced By: DataReel Software Development Team</FONT>
<FONT COLOR="#ff0000">// File Creation Date: 02/04/1997  </FONT>
<FONT COLOR="#ff0000">// Date Last Modified: 06/17/2016</FONT>
<FONT COLOR="#ff0000">// Copyright (c) 2001-2016 DataReel Software Development</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">// ------------- Program Description and Details ------------- // </FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">/*
This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
 
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  
USA

Demo of how to re-open a database file using the gxDatabase
manager.
*/</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
#include "gxdlcode.h"

#if defined (__USE_ANSI_CPP__) <FONT COLOR="#ff0000">// Use the ANSI Standard C++ library</FONT>
#include &lt;iostream&gt;
using namespace std; <FONT COLOR="#ff0000">// Use unqualified names for Standard C++ library</FONT>
#else <FONT COLOR="#ff0000">// Use the old iostream library by default</FONT>
#include &lt;iostream.h&gt;
#endif <FONT COLOR="#ff0000">// __USE_ANSI_CPP__</FONT>

#include &lt;string.h&gt;
#include "gxdbase.h"
#include "gxdstats.h"
#include "gxfloat.h"

const int name_length = 16;

class DatabaseObject
{ 
public:
  DatabaseObject() { name[0] = 0; oid = (gxINT32)0, cid = (gxFLOAT64)0; }
  DatabaseObject(const char *s, long i, double d);

public:
  friend void *operator new(size_t n, char *s, int i, double d,
			    gxDatabase *f) {
    void *ptr = new DatabaseObject(s, i, d);
    f-&gt;Write(ptr, n, f-&gt;Alloc(n));
    return ptr;
  }
  
public: <FONT COLOR="#ff0000">// Platform independent data members</FONT>
  char name[name_length]; <FONT COLOR="#ff0000">// Fixed string type</FONT>
  gxINT32 oid;            <FONT COLOR="#ff0000">// Integer type</FONT>
  gxFLOAT64 cid;          <FONT COLOR="#ff0000">// Floating point type</FONT>
};

DatabaseObject::DatabaseObject(const char *s, long i, double d)
{
  for(int j = 0; j &lt; name_length; j++) name[j] = 0; <FONT COLOR="#ff0000">// Clear the name string</FONT>
  strcpy(name, s);
  oid = i;  
  cid = d;
}

void PausePrg()
{
  cout &lt;&lt; "\n";
  cout &lt;&lt; "Press enter to continue..." &lt;&lt; "\n";
  cin.get();
}

int main()
{
  gxDatabase *f = new gxDatabase; 
  const char *fname1 = "cat.gxd";
  const char *fname2 = "dog.gxd";
  const char *fname3 = "mouse.gxd";
  
  cout &lt;&lt; "\n";

  cout &lt;&lt; "Testing the gxDatabase::ReOpen() function." &lt;&lt; "\n";
  if(!gxDatabase::Exists(fname1)) f-&gt;Create(fname1);
  if(CheckError(f) != 0) {
    delete f;
    return 1;
  }
  if(!gxDatabase::Exists(fname2)) f-&gt;Create(fname2);
  if(CheckError(f) != 0) {
    delete f;
    return 1;
  }
  if(!gxDatabase::Exists(fname3)) f-&gt;Create(fname3);
  if(CheckError(f) != 0) {
    delete f;
    return 1;
  }

  cout &lt;&lt; "\n";
  cout &lt;&lt; "Writing one object to: " &lt;&lt; fname1 &lt;&lt; "\n";
  f-&gt;Open(fname1);
  if(CheckError(f) != 0) {
    delete f;
    return 1;
  }
  new("Cat", 0L, 2000.101, f) DatabaseObject;
  PausePrg();
  DatabaseStats(f);
  PausePrg();

  cout &lt;&lt; "Writing two objects to: " &lt;&lt; fname2 &lt;&lt; "\n";
  f-&gt;Open(fname2);
  if(CheckError(f) != 0) {
    delete f;
    return 1;
  }
  new("Cat", 0L, 2000.101, f) DatabaseObject;
  new("Dog", 0L, 2000.101, f) DatabaseObject;
  PausePrg();
  DatabaseStats(f);
  PausePrg();

  cout &lt;&lt; "Writing three objects to: " &lt;&lt; fname3 &lt;&lt; "\n";
  f-&gt;Open(fname3);
  if(CheckError(f) != 0) {
    delete f;
    return 1;
  }
  new("Cat", 0L, 2000.101, f) DatabaseObject;
  new("Dog", 0L, 2000.101, f) DatabaseObject;
  new("Mouse", 0L, 2000.101, f) DatabaseObject;
  PausePrg();
  DatabaseStats(f);
  PausePrg();

  cout &lt;&lt; "Exiting..." &lt;&lt; "\n";
  f-&gt;Close();
  if(CheckError(f) != 0) {
    delete f;
    return 1;
  }

  delete f;
  return 0;
}
<FONT COLOR="#ff0000">// ----------------------------------------------------------- //</FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// --------- End of File --------- //</FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>

</PRE></FONT>

</BODY>
</HTML>
