<!-- HTML file generated by: cpp2html version 4.42 -->
<!-- Copyright (c) 2001-2016 DataReel Software Development -->
<!-- For program info contact: https://github.com/datareel -->
<HTML>
<HEAD>
<TITLE> SysTimeExample </TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<FONT FACE="Courier New" SIZE=3><PRE>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// -------- Start of File -------- //</FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">// C++ Source Code File Name: testprog.cpp </FONT>
<FONT COLOR="#ff0000">// C++ Compiler Used: MSVC, BCC32, GCC, HPUX aCC, SOLARIS CC</FONT>
<FONT COLOR="#ff0000">// Produced By: DataReel Software Development Team</FONT>
<FONT COLOR="#ff0000">// File Creation Date: 12/11/1996</FONT>
<FONT COLOR="#ff0000">// Date Last Modified: 06/17/2016</FONT>
<FONT COLOR="#ff0000">// Copyright (c) 2001-2016 DataReel Software Development</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">// ------------- Program Description and Details ------------- // </FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
<FONT COLOR="#ff0000">/*
This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
 
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  
USA

This is a test program for the SysTime class.
*/</FONT>
<FONT COLOR="#ff0000">// ----------------------------------------------------------- // </FONT>
#include "gxdlcode.h"

#if defined (__USE_ANSI_CPP__) <FONT COLOR="#ff0000">// Use the ANSI Standard C++ library</FONT>
#include &lt;iostream&gt;
using namespace std; <FONT COLOR="#ff0000">// Use unqualified names for Standard C++ library</FONT>
#else <FONT COLOR="#ff0000">// Use the old iostream library by default</FONT>
#include &lt;iostream.h&gt;
#endif <FONT COLOR="#ff0000">// __USE_ANSI_CPP__</FONT>

#include "systime.h"

#ifdef __MSVC_DEBUG__
#include "leaktest.h"
#endif

void PausePrg()
{
  cout &lt;&lt; "\n";
  cout &lt;&lt; "Press &lt;Enter&gt; to continue..." &lt;&lt; "\n";
  cin.get();
}

void ClearInputStream(istream &amp;s)
{
  char c;
  s.clear();
  while(s.get(c) &amp;&amp; c != '\n') { ; }
}

int main()
{
#ifdef __MSVC_DEBUG__
  InitLeakTest();
#endif

  SysTime *Time = new SysTime;

  cout &lt;&lt; "\n";
  cout &lt;&lt; "The current system time is: " &lt;&lt; Time-&gt;GetSystemDateTime() &lt;&lt; "\n";
  cout &lt;&lt; "The current GMT time is: " &lt;&lt; Time-&gt;GetGMTDateTime() &lt;&lt; "\n"; 
  cout &lt;&lt; "\n";
  int days_old = Time-&gt;DaysOld(1, 1970);
  cout &lt;&lt; days_old &lt;&lt; " days have passed since January 1, 1970" &lt;&lt; "\n";
  
  PausePrg();
  cout &lt;&lt; "Testing the date span function..." &lt;&lt; "\n";
  cout &lt;&lt; "\n";
  cout &lt;&lt; "Enter the number of days to look ahead: ";
  int days; char datespanBuf[255];
  cin &gt;&gt; days;
  if(Time-&gt;DateSpan(datespanBuf, days)) 
    cout &lt;&lt; "Date span = " &lt;&lt; datespanBuf &lt;&lt; "\n";
  else
    cout &lt;&lt; "DateSpan() error" &lt;&lt; "\n";

  ClearInputStream(cin); <FONT COLOR="#ff0000">// Go to end of line</FONT>
  PausePrg();

  cout &lt;&lt; "Testing the leap year function..." &lt;&lt; "\n";
  cout &lt;&lt; "\n";
  cout &lt;&lt; "Enter a year: ";
  int year; 
  cin &gt;&gt; year;
  if(Time-&gt;IsLeapYear(year)) 
    cout &lt;&lt; year &lt;&lt; " is a leap year" &lt;&lt; "\n";
  else
    cout &lt;&lt; year &lt;&lt; " is not a leap year" &lt;&lt; "\n";

  cout &lt;&lt; "\n";
  cout &lt;&lt; "Displaying all the String time formats" &lt;&lt; "\n";

  ClearInputStream(cin); <FONT COLOR="#ff0000">// Go to end of line</FONT>
  PausePrg();

  cout &lt;&lt; "AM or PM: " &lt;&lt; Time-&gt;GetStrTime(SysTime::AMPM) &lt;&lt; "\n"; 
  cout &lt;&lt; "System date: " &lt;&lt; Time-&gt;GetStrTime(SysTime::Date) &lt;&lt; "\n"; 

  cout &lt;&lt; "Day of the month (01..31): " 
       &lt;&lt; Time-&gt;GetStrTime(SysTime::DayOfTheMonth) &lt;&lt; "\n"; 

  cout &lt;&lt; "Day of the week (0..6, Sunday=0): " 
       &lt;&lt; Time-&gt;GetStrTime(SysTime::DayOfTheWeek) &lt;&lt; "\n"; 

  cout &lt;&lt; "Hour (24 hour clock - 00..23): " 
       &lt;&lt; Time-&gt;GetStrTime(SysTime::Hour) &lt;&lt; "\n";
  
  cout &lt;&lt; "Julian day: " &lt;&lt; Time-&gt;GetStrTime(SysTime::JDay) &lt;&lt; "\n"; 
  cout &lt;&lt; "Minutes (00..59): " &lt;&lt; Time-&gt;GetStrTime(SysTime::Minutes) &lt;&lt; "\n"; 
  cout &lt;&lt; "Month (01..12): " &lt;&lt; Time-&gt;GetStrTime(SysTime::Month) &lt;&lt; "\n"; 
  cout &lt;&lt; "Full month name: " &lt;&lt; Time-&gt;GetStrTime(SysTime::FullMonthName)
       &lt;&lt; "\n"; 

  cout &lt;&lt; "Abbreviated month name: " 
       &lt;&lt; Time-&gt;GetStrTime(SysTime::MonthName) &lt;&lt; "\n"; 

  cout &lt;&lt; "Seconds (00..59): " &lt;&lt; Time-&gt;GetStrTime(SysTime::Seconds) &lt;&lt; "\n"; 
  cout &lt;&lt; "System time: " &lt;&lt; Time-&gt;GetStrTime(SysTime::SystemTime) &lt;&lt; "\n"; 
       
  cout &lt;&lt; "Timezone name: "
       &lt;&lt; Time-&gt;GetStrTime(SysTime::TimeZoneName) &lt;&lt; "\n";
  
  cout &lt;&lt; "Abbreviated weekday name: " 
       &lt;&lt; Time-&gt;GetStrTime(SysTime::WeekDayName) &lt;&lt; "\n";
  
  cout &lt;&lt; "Full weekday name: "
       &lt;&lt; Time-&gt;GetStrTime(SysTime::FullWeekDayName) &lt;&lt; "\n";
  
  cout &lt;&lt; "Week of the year (00..52, Sunday first): "
       &lt;&lt; Time-&gt;GetStrTime(SysTime::WeekOfYearSF) &lt;&lt; "\n";
  
  cout &lt;&lt; "Week of the year (00..52, Monday first): "
       &lt;&lt; Time-&gt;GetStrTime(SysTime::WeekOfYearMF) &lt;&lt; "\n";
  
  cout &lt;&lt; "Year (0000..9999): " &lt;&lt; Time-&gt;GetStrTime(SysTime::Year) &lt;&lt; "\n"; 
  cout &lt;&lt; "Year (00..99): " &lt;&lt; Time-&gt;GetStrTime(SysTime::YearXX) &lt;&lt; "\n"; 
  
  cout &lt;&lt; "\n";

  cout &lt;&lt; "Displaying all the Integer time formats" &lt;&lt; "\n";
  PausePrg();

  cout &lt;&lt; "Day of the month (01..31): " 
       &lt;&lt; Time-&gt;GetIntTime(SysTime::DayOfTheMonth) &lt;&lt; "\n"; 

  cout &lt;&lt; "Display the day of the week (0..6, Sunday=0): " 
       &lt;&lt; Time-&gt;GetIntTime(SysTime::DayOfTheWeek) &lt;&lt; "\n"; 

  cout &lt;&lt; "Hour (24 hour clock - 00..23): " 
       &lt;&lt; Time-&gt;GetIntTime(SysTime::Hour) &lt;&lt; "\n";
  
  cout &lt;&lt; "Julian day: " &lt;&lt; Time-&gt;GetIntTime(SysTime::JDay) &lt;&lt; "\n"; 
  cout &lt;&lt; "Minutes (00..59): " &lt;&lt; Time-&gt;GetIntTime(SysTime::Minutes) &lt;&lt; "\n"; 
  cout &lt;&lt; "Month (01..12): " &lt;&lt; Time-&gt;GetIntTime(SysTime::Month) &lt;&lt; "\n"; 
  cout &lt;&lt; "Seconds (00..59): " &lt;&lt; Time-&gt;GetIntTime(SysTime::Seconds) &lt;&lt; "\n"; 

  cout &lt;&lt; "Week of the year (00..52, Sunday first): "
       &lt;&lt; Time-&gt;GetIntTime(SysTime::WeekOfYearSF) &lt;&lt; "\n";
  
  cout &lt;&lt; "Week of the year (00..52, Monday first): "
       &lt;&lt; Time-&gt;GetIntTime(SysTime::WeekOfYearMF) &lt;&lt; "\n";
  
  cout &lt;&lt; "Year (0000..9999): " &lt;&lt; Time-&gt;GetIntTime(SysTime::Year) &lt;&lt; "\n"; 
  cout &lt;&lt; "Year (00..99): " &lt;&lt; Time-&gt;GetIntTime(SysTime::YearXX) &lt;&lt; "\n"; 

  PausePrg();
  
  cout &lt;&lt; "Testing invalid format codes..." &lt;&lt; "\n";

  PausePrg();

  cout &lt;&lt; Time-&gt;GetStrTime(9999) &lt;&lt; "\n";
  cout &lt;&lt; hex &lt;&lt; Time-&gt;GetIntTime(9999) &lt;&lt; "\n";

  cout &lt;&lt; "Testing Date/Time formatting functions..." &lt;&lt; "\n";

  PausePrg();

  cout &lt;&lt; "System time: " &lt;&lt; Time-&gt;GetSystemTime() &lt;&lt; "\n";
  cout &lt;&lt; "System date: " &lt;&lt; Time-&gt;GetSystemDate() &lt;&lt; "\n";
  cout &lt;&lt; "System time and date: " &lt;&lt; Time-&gt;GetSystemDateTime() &lt;&lt; "\n";
  cout &lt;&lt; "GMT time and date: " &lt;&lt; Time-&gt;GetGMTDateTime() &lt;&lt; "\n";
  cout &lt;&lt; "SMTP time stamp: " &lt;&lt; Time-&gt;GetSMTPTime() &lt;&lt; "\n";

  delete Time;
  return 0;
}
<FONT COLOR="#ff0000">// ----------------------------------------------------------- //</FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>
<FONT COLOR="#ff0000">// --------- End of File --------- //</FONT>
<FONT COLOR="#ff0000">// ------------------------------- //</FONT>


</PRE></FONT>

</BODY>
</HTML>
