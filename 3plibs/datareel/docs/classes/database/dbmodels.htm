<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>Database Models </TITLE>
<META NAME="Template" CONTENT="C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE\html.dot">
</HEAD>
<BODY LINK="#0000ff" VLINK="#800080" BGCOLOR="#ffffff">

<P><!-- HTML file generated by: inc2help version 1034.101 --></P>
<H1 ALIGN="CENTER">Database Models</H1>
<P><HR></P>
<B><U><FONT SIZE=4><P>Topics</B></U></FONT>:</P>
<P><A HREF="#Overview">Overview</A><BR>
<A HREF="#OODBM">Object-Oriented Database Model</A> <BR>
<A HREF="#RDBMS">Relational Database Model</A> </P>
<P><HR></P>
<P><!-- New Section --><A NAME="Overview"><B><FONT SIZE=4>Overview</A></B></FONT> </P>
<P>Brief description of various database models.</P>
<P><HR></P>
<P><A NAME="OODBM"><!-- New Section --><B><FONT SIZE=4>Object-Oriented Database Model</B></FONT> </A></P>
<P>The object-oriented database model is based on persistent objects and extends the object-oriented programming principles of abstraction, encapsulation, inheritance, and polymorphism into the database. A persistent object is an object that saves its state between program invocations. Normally an object's data, stored in memory, is lost when the program terminates. Persistent objects store their data both in memory and in a disk file. When the program is terminated and restarted again, the persistent object can restore its last state by loading its data from the disk file. This is the basis of an objected-oriented database. A persistent object is able to represent any kind of data because there is no restrictions on its format and content. This allows an object-oriented database to define complex data items, arrays, variable lists, and user-defined data types within its records definition. </P>
<P><HR></P>
<P><A NAME="RDBMS"><!-- New Section --><B><FONT SIZE=4>Relational Database Model</A></P>
</B></FONT><P>The relational database model consists of fixed-length, fixed-format records, which form tables of rows and columns. Each record has a primary key data element to uniquely identify the record in the database. In a relational database the relationship between the rows and columns is represented by data values rather than record addresses. Both the relational and object-oriented database models have their advantages. An object-oriented database is not bound by rows and columns and can be made to represent any type of data. A relational database can easily provide a general-purpose query and report writer languages to find, sort, view, and print the records in the database.</P>
<P><HR></P>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=1 BORDERCOLOR="#000000">
<TR><TD VALIGN="MIDDLE">
<P ALIGN="CENTER"><B>End Of Document</B></TD>
</TR>
</TABLE>
</CENTER></P>

<P>&nbsp;</P>

</BODY>
</HTML>
