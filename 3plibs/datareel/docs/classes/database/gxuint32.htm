<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>gxUINT32 Class</TITLE>
<META NAME="Template" CONTENT="C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE\html.dot">
</HEAD>
<BODY LINK="#0000ff" VLINK="#800080" BGCOLOR="#ffffff">

<P><!-- HTML file generated by: inc2help version 1034.101 --></P>
<H1 ALIGN="CENTER">gxUINT32 Integer Type</H1>
<P><HR></P>
<B><U><FONT SIZE=4><P>Topics</B></U></FONT>:</P>
<P><A HREF="#Overview">Overview</A><A HREF="#Overview">Overview</A><BR>
<A HREF="#ConditionalDirectives">Conditional Directives</A><BR>
<A HREF="gxheader.htm#TypeDefinitions">Type Definitions</A><BR>
<A HREF="#Functions">Functions</A></P>
<P><HR></P>
<P><!-- New Section --><A NAME="Overview"><B><FONT SIZE=4>Overview</A></B></FONT> </P>
<P>The gxUINT32 class is used to represent 32 bit-unsigned integers independently of the operating system or hardware platform used. gxUINT32 types are implemented to overcome the big and little endian byte ordering problems encountered when writing integer values to a common database file or device accessed by several different types of machines. It works by separating a 32-bit value into four separate byte values and reordering the bytes lowest-order to highest-order. A gxUINT32 type has a base 10 limit of 4,294,967,295.</P>
<P><HR></P>
<B><FONT SIZE=4><P><A NAME="ConditionalDirectives">Conditional Directives</A></P>
</FONT><P>__USE_NATIVE_INT_TYPES__</B> - This conditional directive allows the use of native integer types in place of platform interoperable integer types for debugging purposes only.</P>
<P><HR></P>
<P><!-- New Section --><A NAME="Functions"><B><FONT SIZE=4>Functions</A></B></FONT> </P>
<P>The gxUINT32 class is designed to function in the same manner as built-in integer types and includes a full complement of arithmetic and comparison operator overloads. Each operator is overloaded for the following data types: gxUINT32, __LWORD__, __ULWORD__, __WORD__, __SWORD__, __ULWORD__, __USWORD__, __SBYTE__, and __UBYTE__. </P>
<P><HR></P>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=1 BORDERCOLOR="#000000">
<TR><TD VALIGN="MIDDLE">
<P ALIGN="CENTER"><B>End Of Document</B></TD>
</TR>
</TABLE>
</CENTER></P>

<P>&nbsp;</P>

</BODY>
</HTML>
