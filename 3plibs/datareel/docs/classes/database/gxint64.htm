<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>gxINT64 Integer Type </TITLE>
<META NAME="Template" CONTENT="C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE\html.dot">
</HEAD>
<BODY LINK="#0000ff" VLINK="#800080" BGCOLOR="#ffffff">

<P><!-- HTML file generated by: inc2help version 1034.101 --></P>
<H1 ALIGN="CENTER">gxINT64 Integer Type</H1>
<P><HR></P>
<B><U><FONT SIZE=4><P>Topics</B></U></FONT>:</P>
<P><A HREF="#Overview">Overview</A><A HREF="#Overview">Overview</A><BR>
<A HREF="#ConditionalDirectives">Conditional Directives</A><BR>
<A HREF="#TypeDefinitions">Type Definitions</A><BR>
<A HREF="#Functions">Functions</A></P>
<P><HR></P>
<P><!-- New Section --><A NAME="Overview"><B><FONT SIZE=4>Overview</A></B></FONT> </P>
<P>The gxINT64 class is used to represent 64 bit-signed integers independently of the operating system or hardware platform used. gxINT64 types are implemented to overcome the big and little endian byte ordering problems encountered when writing integer values to a common database file or device accessed by several different types of machines. It works by separating a 64-bit value into eight separate byte values and reordering the bytes lowest-order to highest-order. A gxINT64 type has a base 10 positive limit of 9,223,372,036,854,775,807 and a negative limit of 9,223,372,036,854,775,808</P>
<P><HR></P>
<B><FONT SIZE=4><P><A NAME="ConditionalDirectives">Conditional Directives</A></P>
</FONT><P>__WIN32__</B> - Conditional directive required by all WIN32 platforms and compilers.</P>
<B><P>__MSVC__</B> - Conditional directive required for MSVC version 4.2 and higher.</P>
<B><P>__BCC32__</B> - Conditional directive required for BCC version 5.5 and higher.</P>
<B><P>__UNIX__</B> - Conditional directive required for all UNIX variants.</P>
<B><P>__USE_NATIVE_INT_TYPES__</B> - This conditional directive allows the use of native integer types in place of platform interoperable integer types for debugging purposes only.</P>
<P><HR></P>
<B><FONT SIZE=4><P><A NAME="TypeDefinitions">Type Definitions</A></P>
</B></FONT><P>Type definitions used to maintain compatibility between the built-in 64-bit data type sizes on various compilers.</P>
<B><P>__LLWORD__</B> - Type definition for native signed 64-bit integer types.</P>
<B><P>__ULLWORD__</B> - Type definition for native unsigned 64-bit integer types.</P>
<P><HR></P>
<P><!-- New Section --><A NAME="Functions"><B><FONT SIZE=4>Functions</A></B></FONT> </P>
<P>The gxINT64 class is designed to function in the same manner as built-in integer types and includes a full complement of arithmetic and comparison operator overloads. Each operator is overloaded for the following data types: gxINT64, __LLWORD__, __ULLWORD__, __LWORD__, __ULWORD__, __WORD__, __SWORD__, __ULWORD__, __USWORD__, __SBYTE__, and __UBYTE__. </P>
<P><HR></P>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=1 BORDERCOLOR="#000000">
<TR><TD VALIGN="MIDDLE">
<P ALIGN="CENTER"><B>End Of Document</B></TD>
</TR>
</TABLE>
</CENTER></P>

<P>&nbsp;</P>

</BODY>
</HTML>
