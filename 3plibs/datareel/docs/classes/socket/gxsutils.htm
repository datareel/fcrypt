<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>gxSocket Utilities </TITLE>
<META NAME="Template" CONTENT="C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE\html.dot">
</HEAD>
<BODY LINK="#0000ff" VLINK="#800080" BGCOLOR="#ffffff">

<P><!-- HTML file generated by: inc2help version 1034.101 --></P>
<H1 ALIGN="CENTER">gxSocket Utilities </H1>
<P><HR></P>
<B><U><FONT SIZE=4><P>Topics</B></U></FONT>:</P>
<P><A HREF="#Overview">Overview</A><BR>
<A HREF="gxsocket.htm#ConditionalDirectives">Conditional Directives</A><BR>
<A HREF="#Constants">Constants</A><BR>
<A HREF="gxsocket.htm#TypeDefinitions">Type Definitions</A><BR>
<A HREF="gxsocket.htm#Enumerations">Enumerations</A><BR>
<A HREF="#Structs">Data Structures</A> <BR>
<A HREF="#Functions">Functions</A></P>
<P><HR></P>
<P><!-- New Section --><A NAME="Overview"><B><FONT SIZE=4>Overview</A></B></FONT> </P>
<P>The gxSocket utilities are a collection of data structures and standalone functions used for low-level network operations.</P>
<P><HR></P>
<P><!-- New Section --><A NAME="Constants"><B><FONT SIZE=4>Constants</A></B></FONT> </P>
<PRE>// ICMP Constants
const int <B>gxsECHO_REQ_DATASIZE</B> =  32; // Echo Request Data size
const int <B>gxsICMP_ECHO_REPLY</B> = 0;     // ICMP echo reply
const int <B>gxsICMP_ECHO_REQUEST</B> = 8;   // ICMP echo request</PRE>
<P><A HREF="gxsocket.htm#Constants">gxSocket Constants</A> </P>
<P><HR></P>
<P><!-- New Section --><A NAME="Structs"><B><FONT SIZE=4>Data Structures</A></B></FONT> </P>
<P>IP Header in accordance with RFC 791: <A HREF="http://www.faqs.org/rfcs/rfc791.html">http://www.faqs.org/rfcs/rfc791.html</A></P>
<FONT COLOR="#008080"><PRE>struct gxsIPHeader
{
  u_char version_and_ihl;     // Version and Internet header length
  u_char type_of_service;     // Type of service
  short&#9;total_length;         // Total length
  short&#9;sender_id;            // Identification
  short&#9;flag_and_frag_offset; // Flags and fragment offset
  u_char time_to_live;        // Time to live
  u_char protocol;            // Protocol
  u_short checksum;           // Checksum
  gxsInternetAddress ia_source;&#9;     // Internet Address - Source
  gxsInternetAddress ia_destination; // Internet Address - Destination
};</PRE>
</FONT><P>ICMP Header in accordance with RFC 792: <A HREF="http://www.faqs.org/rfcs/rfc792.html">http://www.faqs.org/rfcs/rfc792.html</A></P>
<FONT COLOR="#008080"><PRE>struct gxsICMPHeader
{
  u_char type;        // Type (8 for echo message / 0 for echo reply message)
  u_char code;        // Code
  u_short checksum;   // Checksum
  u_short identifier; // Identifier
  u_short sequence;   // Sequence
  char data;          // Data
};</PRE>
</FONT><P>ICMP echo request packet.</P>
<FONT COLOR="#008080"><PRE>struct gxsEchoRequest
{
  gxsICMPHeader icmp_header;
  int time_sent;
  char data[gxsECHO_REQ_DATASIZE];
};</PRE>
</FONT><P>ICMP echo reply packet.</P>
<FONT COLOR="#008080"><PRE>struct gxsEchoReply
{
  gxsIPHeader ip_header;
  gxsEchoRequest echo_request;
  char data[gxsECHO_REQ_DATASIZE];
};</PRE>
</FONT><P><HR></P>
<P><!-- New Section --><A NAME="Functions"><B><FONT SIZE=4>Standalone Functions</A></B></FONT> </P>
<B><FONT COLOR="#000080"><P>u_short InChecksum16(u_short *addr, int len)</B></FONT> - C++ checksum routine for Internet protocol family headers taken from Mike Muuss' in_cksum() function and his comments from the original ping program. </P>
<P>Author: Mike Muuss<BR>
U. S. Army Ballistic Research Laboratory<BR>
December, 1983</P>
<B><FONT COLOR="#000080"><P>int ParseServiceFileEntry(char *entry, char *service, int *port, char *protocol, char *aliases, char *comment)</B></FONT> - Standalone function used to parse a single line of a services file. Returns true if no error were encountered or false if the line does not contain a valid service, port, and protocol entry. Services file format:</P>
<PRE>&lt;service name&gt; &lt;port number&gt;/&lt;protocol&gt; [aliases...] [#&lt;comment&gt;]</PRE>
<P><HR></P>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=1 BORDERCOLOR="#000000">
<TR><TD VALIGN="MIDDLE">
<P ALIGN="CENTER"><B>End Of Document</B></TD>
</TR>
</TABLE>
</CENTER></P>

<P>&nbsp;</P>

</BODY>
</HTML>
